@page "/master_view/child_view"
@using Models.FinTech_API
@using FinTech_API
@using System.Reactive.Subjects
@using System.Reactive.Linq
@inject IFinTech_APIService FinTech_APIService
@implements IDisposable;

<div class="row-layout child-view-container">
    <div class="column-layout group">
        <IgbList class="list" child_view-scope>
            @foreach (var item in _finTechAPIStock)
            {
                <IgbListItem @onclick="() => ListItemClick(item)">
                    <IgbAvatar Src="@item.Img_url" slot="start" Shape="AvatarShape.Circle" class="avatar" child_view-scope></IgbAvatar>
                    <div slot="title">@item.Stock_symbol</div>
                    <div slot="subtitle">@item.Stock_name</div>
                </IgbListItem>
            }
        </IgbList>
    </div>
    <div class="column-layout group_1">
        <h5 class="h5">
            @_selectedStock?.Stock_symbol.ToString()
        </h5>
        <div class="column-layout group_2">
            <IgbFinancialChart DataSource="@_finTechAPIStockData" class="financial-chart" child_view-scope></IgbFinancialChart>
        </div>
    </div>
</div>

@code {
    private Stock? __selectedStock;
    public Stock? _selectedStock
    {
        get => __selectedStock;
        set
        {
            __selectedStock = value;
            _finTechAPIStockDataSubject.OnNext(value);
        }
    }

    private List<Stock> _finTechAPIStock = new();
    private List<StockData> _finTechAPIStockData = new();
    private Subject<object> _finTechAPIStockDataSubject = new Subject<object>();

    private Subject<object> destroy = new();

    public void ListItemClick(Stock item)
    {
        this._selectedStock = item;
    }

    protected override async Task OnInitializedAsync()
    {
        _finTechAPIStock = await FinTech_APIService.GetStockList();
        _finTechAPIStockData = await FinTech_APIService.GetStockDataList(_selectedStock?.Stock_symbol);
        _finTechAPIStockDataSubject.TakeUntil(this.destroy).Subscribe(async _ => 
        {
            _finTechAPIStockData = await FinTech_APIService.GetStockDataList(_selectedStock?.Stock_symbol);
            await InvokeAsync(StateHasChanged);
        });
        await base.OnInitializedAsync();
    }

    public void Dispose()
    {
        this.destroy.OnNext(null);
        this.destroy.Dispose();
    }
}
